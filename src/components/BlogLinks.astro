---
import {getCollection} from "astro:content";
import BlogLink from "./BlogLink.astro";
interface Props {
    num?: number | null;
}
const {num = null} = Astro.props;

const posts = (await getCollection('blog')).sort(
(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
const displayPosts = num ? posts.slice(0, num) : posts;
---
<ul>
    {
        displayPosts.map((post) => (
                <li>
                    <BlogLink post={post} />
                </li>
        ))
    }
</ul>
{num && <a class="view-all internal" href="/blog">View {posts.length - displayPosts.length} more</a>}

<style lang="scss">
  ul {
    width: 100%;
    li {
      width: 100%;
      padding: 0 var(--space-s);
      position: relative;
      z-index: 1;

      &:after {
        transition: all 0.1s var(--easing);
        content: '';
        position: absolute;
        z-index: -1;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background:
                url("data:image/svg+xml,%3Csvg viewBox='0 0 400 400' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.29' numOctaves='4' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E")
                var(--color-highlight-24);
        filter: brightness(120%);
        -webkit-mask-image: linear-gradient(90deg, rgba(0,0,0,0) 0%, rgba(0,0,0,1) 2%, rgba(0,0,0,1) 98%, rgba(0,0,0,0) 100%);
        mask-image: linear-gradient(90deg, rgba(0,0,0,0) 0%, rgba(0,0,0,1) 2%, rgba(0,0,0,1) 98%, rgba(0,0,0,0) 100%);
        opacity: 0;

        html[data-theme='dark'] & {
          background:
                  url("data:image/svg+xml,%3Csvg viewBox='0 0 400 400' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.29' numOctaves='4' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E")
                  var(--color-highlight-74);
        }
      }


      &:hover {
        &:after {
          opacity: 1;
          html[data-theme='dark'] &, html[data-theme='arc'] & {
            opacity: 0.35;
          }
        }
      }
    }
  }
  .view-all {
    display: block;
    padding: 0 var(--space-s);
    margin-top: var(--space-xs);
    color: var(--color-highlight-74);

    &:hover {
        color: var(--color-highlight)
    }
  }
</style>